artefacts:
  - name: none
    path: ''
    path_type: file
  - name: winevt
    path: '{root}/Windows/System32/winevt/Logs'
    path_type: folder
  - name: base
    path: '{root}'
    path_type: folder
  - name: j_file
    path: '{root}/$Extend/$UsnJrnl:$J'
    path_type: file
  - name: mft
    path: '{root}/$MFT'
    path_type: file
  - name: recycle_bin
    path: '{root}/$Recycle.Bin'
    path_type: folder
  - name: pagefile
    path: '{root}/pagefile.sys'
    path_type: file
  - name: user_dir
    path: '{root}/Users'
    path_type: folder
  - name: consolehost_history
    path: '{root}/Users/*/AppData/Roaming/Microsoft/Windows/PowerShell/PSReadLine/ConsoleHost_history.txt'
    path_type: file
  - name: amcache
    path: '{root}/Windows/AppCompat/Programs/Amcache.hve'
    path_type: file
  - name: recentFileCache
    path: '{root}/Windows/AppCompat/Programs/RecentFileCache.bcf'
    path_type: file
  - name: prefetch
    path: '{root}/Windows/Prefetch'
    path_type: folder
  - name: system32
    path: '{root}/Windows/System32'
    path_type: folder
  - name: system
    path: '{root}/Windows/System32/config/SYSTEM'
    path_type: file
  - name: system_config
    path: '{root}/Windows/System32/config'
    path_type: folder
  - name: sum
    path: '{root}/Windows/System32/LogFiles/Sum'
    path_type: folder
  - name: objects
    path: '{root}/Windows/System32/wbem/Repository/OBJECTS.DATA'
    path_type: file
  - name: winevt
    path: '{root}/Windows/System32/winevt/Logs'
    path_type: folder
  - name: chrome
    path: '{root}/Users/*/AppData/Local/Google/Chrome/User Data/Default'
    path_type: folder
  - name: temp
    path: '{root}/Windows/Temp'
    path_type: folder
  - name: evtx_dump
    path: '{root}/Windows/System32/winevt/Logs/Microsoft-Windows-TaskScheduler%4Operational.evtx'
    path_type: file
  - name: chrome
    path: '{root}\Users\*\AppData\Local\Google\Chrome\User Data\Default'
    path_type: folder
  - name: actCache
    path: '{root}\Users\*\AppData\Local\ConnectedDevicesPlatform\*\ActivitiesCache.db'
    path_type: file

wiskers:
  - name: MFTECmd
    binary: '{tool_path}\Get-ZimmermanTools\MFTECmd.exe'
    args: '-f {input} --csv {outfolder} --csvf {outfile} --vss --dedupe'
    outfolder: FileSystem
    outfile: MFTECmd.csv
    input: mft
    github: https://github.com/EricZimmerman/MFTECmd.git
  - name: mft
    binary: '{tool_path}\mft\mft_dump.exe'
    args: '-o csv -f {outfolder}/{outfile} {input}'
    outfolder: FileSystem
    outfile: mft.csv
    input: mft
    github: https://github.com/omerbenamram/mft
  - name: usnjrnl-j
    binary: '{tool_path}\Get-ZimmermanTools\MFTECmd.exe'
    args: '-f {input} --csv {outfolder} --csvf {outfile} --vss --dedupe'
    outfolder: FileSystem
    outfile: usnjrnl-j-file.csv
    input: j_file
    github: https://github.com/EricZimmerman/MFTECmd.git
  - name: rbcmd
    binary: '{tool_path}\Get-ZimmermanTools\RBCmd.exe'
    args: '-d {input} --csv {outfolder} -q'
    outfolder: FileSystem
    outfile: 'RBCmd_Output.csv'
    input: recycle_bin
    github: https://github.com/EricZimmerman/RBCmd.git
  - name: lnk
    binary: '{tool_path}\Get-ZimmermanTools\LECmd.exe'
    args: '-d {input} --csv {outfolder} --csvf {outfile} -q'
    outfolder: FileSystem
    outfile: lnk-files.csv
    input: user_dir
    github: https://github.com/EricZimmerman/LECmd.git
  - name: evtx_dump
    binary: '{tool_path}\evtx_dump-v0.8.1.exe'
    args: -f {outfolder}/{outfile} -o jsonl --no-confirm-overwrite {input}
    outfolder: EventLogs
    outfile: evtx_dump.json
    input: evtx_dump
    github: https://github.com/omerbenamram/evtx.git
  - name: EvtxECmd
    binary: '{tool_path}\Get-ZimmermanTools\EvtxECmd\EvtxECmd.exe'
    args: '-d {input} --csv {outfolder} --csvf {outfile}'
    outfolder: EventLogs
    outfile: EvtxECmd-All.csv
    input: winevt
    github: https://github.com/EricZimmerman/evtx.git
  - name: hayabusa
    binary: '{tool_path}\hayabusa\hayabusa.exe'
    args: 'csv-timeline -d {input} -o {outfolder}\{outfile} -p timesketch-verbose --ISO-8601 -w'
    outfolder: EventLogs
    outfile: hayabusa.csv
    input: winevt
    github: 
    para: false
  - name: chainsaw_evtx
    binary: '{tool_path}\chainsaw\target\release\chainsaw.exe'
    args: 'hunt {input} -s {tool_path}\sigma -r {tool_path}\chainsaw\rules --mapping {tool_path}\chainsaw\mappings\sigma-event-logs-all.yml --csv -o {outfolder} --full --skip-errors'
    outfolder: EventLogs\chainsaw
    outfile: sigma.csv
    input: winevt
    github: https://github.com/WithSecureLabs/chainsaw.git
    para: false
  - name: chainsaw_shim
    binary: '{tool_path}\chainsaw\target\release\chainsaw.exe'
    args: analyse shimcache {input}\Windows\System32\config\SYSTEM --regexfile {tool_path}\chainsaw\analysis\shimcache_patterns.txt --amcache {input}\Windows\AppCompat\Programs\Amcache.hve --tspair --output {outfolder}\{outfile}
    input: base
    outfolder: FileExecution
    outfile: chainsaw_shim.csv
    github: https://github.com/WithSecureLabs/chainsaw.git
  - name: chainsaw_srum
    binary: '{tool_path}\chainsaw\target\release\chainsaw.exe'
    args: analyse srum --software {input}/config/SOFTWARE {input}/SRU/SRUDB.dat --output {outfolder}\{outfile}
    input: system32
    outfolder: Network
    outfile: chainsaw_srum.csv
    github: https://github.com/WithSecureLabs/chainsaw.git
  - name: AppCompatCache
    binary: '{tool_path}\Get-ZimmermanTools\AppCompatCacheParser.exe'
    args: '-f {input} --csv {outfolder} --csvf {outfile}'
    outfolder: FileExecution
    outfile: appcompatcache.csv
    input: system
    github: https://github.com/EricZimmerman/AppCompatCacheParser.git
  - name: AmcacheParser
    binary: '{tool_path}\Get-ZimmermanTools\AmcacheParser.exe'
    args: '-f {input} --csv {outfolder} -i'
    outfolder: FileExecution
    outfile: '*_Amcache_*'
    input: amcache
    github: https://github.com/EricZimmerman/AmcacheParser.git
  - name: RecentFileCacheParser
    binary: '{tool_path}\Get-ZimmermanTools\RecentFileCacheParser.exe'
    args: '-f {input} --csv {outfolder} --csvf {outfile}'
    outfolder: FileExecution
    outfile: RecentFileCache.csv
    input: recentFileCache
    github: https://github.com/EricZimmerman/RecentFileCacheParser.git
  - name: SCCM_RecentlyUsedApplication
    binary: py
    args: '-2 {tool_path}\CCM_RUA_Finder.py -i {input} -o {outfolder}\{outfile}'
    outfolder: FileExecution
    outfile: SCCM_RecentlyUsedApplication.psv
    input: objects
    github: https://github.com/davidpany/WMI_Forensics.git
  - name: WMIPersistenceFinder
    binary: py
    args: '-3 {tool_path}\PyWMIPersistenceFinder.py {input} > {outfolder}/{outfile}'
    outfolder: FileExecution
    outfile: PyWMIPersistenceFinder.txt
    input: objects
    github: https://github.com/davidpany/WMI_Forensics.git
  - name: Prefetch
    binary: '{tool_path}\Get-ZimmermanTools\PECmd.exe'
    args: '-d {input} --csv {outfolder} --csvf {outfile} --vss --mp -q'
    outfolder: FileExecution
    outfile: prefetch.csv
    input: prefetch
    github: https://github.com/EricZimmerman/Prefetch.git
  - name: SrumECmd
    binary: '{tool_path}\Get-ZimmermanTools\SrumECmd.exe'
    args: '-d {input} --csv {outfolder}'
    outfolder: Network
    outfile: '*_SrumECmd_*.csv'
    input: system32
    github: https://github.com/EricZimmerman/SrumECmd.git
  - name: hindsight
    binary: '{tool_path}\hindsight.exe'
    args: ' -i {input} -f jsonl -o {outfolder}\{outfile}'
    outfolder: Network
    outfile: hindsight
    input: user_dir
    github:
  - name: Browsing History
    binary: '{tool_path}\BrowsingHistoryView.exe'
    args: '/sort 2 /historysource 3 /historysourcefolder {input} /visittimefiltertype 1 /showTimeInGMT 1 /scomma {outfolder}/{outfile}'
    outfile: BrowsingHistory.csv
    outfolder: Network
    input: user_dir
    chk_exists: false
    web_download: https://www.nirsoft.net/utils/browsinghistoryview-x64.zip
  - name: SumECmd
    binary: '{tool_path}\Get-ZimmermanTools\SumECmd.exe'
    args: '-d {input} --csv {outfolder}'
    outfolder: Network
    outfile: '*SumECmd*.csv'
    input: sum
    github: https://github.com/EricZimmerman/SumECmd.git
    script: true
    script_posh: '$sum = "{input}";
    $outDir = "{outfolder}";
    $outFile = "{outfile}";
    if ($(Test-Path -PathType Container -Path "$sum") -eq $True -and $(Test-Path -Path "$outDir\$outFile") -eq $False) {
        if ($sum.length -le 32) {
            mkdir "$outDir\SumArtefacts";
            Copy-Item -Path "$sum" -Filter "*.mdb" -Destination "$outDir\SumArtefacts" -Recurse;
            $sum = "$outDir\SumArtefacts";
        }
        esentutl.exe /r svc /i /s "$sum" /l "$sum";
        Get-ChildItem -Filter "*.mdb" "$sum" | % {esentutl.exe /p $_.FullName /f $_.FullName /o;};
        if ($(Test-Path -PathType Container "$outDir\SumArtefacts")) {
            Remove-Item -Force -Recurse "$outDir\SumArtefacts";
        }
    }'
  - name: RegSystem
    binary: '{tool_path}\Get-ZimmermanTools\RECmd\RECmd.exe'
    args: '--bn {tool_path}\Get-ZimmermanTools\RECmd\BatchExamples\Kroll_Batch.reb --nl=false -d {input} --csv {outfolder} --csvf {outfile}'
    outfolder: Registry
    outfile: reg-System.csv
    input: system_config
    github:
  - name: RegUser
    binary: '{tool_path}\Get-ZimmermanTools\RECmd\RECmd.exe'
    args: '--bn {tool_path}\Get-ZimmermanTools\RECmd\BatchExamples\Kroll_Batch.reb --nl=false -d {input} --csv {outfolder} --csvf {outfile}'
    outfolder: Registry
    outfile: reg-User.csv
    input: user_dir
    github:
  - name: SBE
    binary: '{tool_path}\Get-ZimmermanTools\SBECmd.exe'
    args: '-d {input} --csv {outfolder}'
    outfolder: UserActivity
    outfile: '*SBECmd_Messages.txt'
    input: user_dir
    github:
  - name: JLECmd
    binary: '{tool_path}\Get-ZimmermanTools\JLECmd.exe'
    args: '-d {input} --csv {outfolder} -q'
    outfolder: UserActivity
    outfile: '*Destinations.csv'
    input: user_dir
    github:

collectors:
  - name: velociraptor
    binary: '{tool_path}\velociraptor-v0.6.0-windows-amd64.exe'
    args: '-v artifacts collect Windows.KapeFiles.Targets --output {outfolder}\{outfile} --args Device={input} --args _J=Y --args _MFT=Y --args _WBEM=Y --args _Prefetch=Y --args LogFiles=Y --args RecycleBin=Y --args WindowsTimeline=Y --args LNKFilesAndJumpLists=Y --args RegistryHivesUser=Y --args BrowserCache=Y --args PowerShellConsole=Y --args Antivirus=Y --args EventLogs=Y'
    outfolder: Artefacts
    outfile: 'velociraptor_collect.zip'
    input: base
  - name: 7zip
    binary: 7z
    args: 'x {outfolder}\{input} -o{out_path} -aos'
    outfolder: Artefacts
    input: 'velociraptor_collect.zip'
    outfile: 'velociraptor_collect.zip'

reporters:
  - name: polars timeline
    binary: py
    args: '{tool_path}/polars_tln.py {out_path} {start_date} {end_date}'
    outfolder: Timeline
    outfile: mft.json
    input: none
  - name: polars hostinfo
    binary: py
    args: '{tool_path}/polars_hostinfo.py {out_path} {outfile}'
    outfolder: Timeline
    outfile: 'Host_Information.txt'
    input: none
  - name: iocs_summary
    binary: rg.exe
    args: '-aiwFf {ioc_file} {outfolder} --json > {outfolder}/{outfile}'
    outfolder: IOC_Findings
    outfile: IOCs_summary.json
    input: none
    github: https://github.com/BurntSushi/ripgrep.git

enrichers:
  - name: polars enrich
    binary: py
    args: '{tool_path}/polars_enrich.py {out_path} {outfile} {tool_path}'
    outfolder: IOC_Findings
    outfile: enriched_indicators.xlsx
    input: none
  - name: iocs_analysis
    binary: rg.exe
    args: '--hidden --trim -zUiFf {ioc_file} {out_path} > {outfolder}/{outfile}'
    outfolder: IOC_Findings
    outfile: iocs_analysis.txt
    input: base
    github: https://github.com/BurntSushi/ripgrep.git
  - name: iocs_pagefile
    binary: rg.exe
    args: '--hidden --trim -aziFf {ioc_file} {input} > {outfolder}/{outfile}'
    outfolder: IOC_Findings
    outfile: iocs_pagefile.txt
    input: pagefile
    github: https://github.com/BurntSushi/ripgrep.git
  - name: iocs_datasource
    binary: rg.exe
    args: '--hidden --trim -aziFf {ioc_file} {input} > {outfolder}/{outfile}'
    outfolder: IOC_Findings
    outfile: iocs_datasource.txt
    input: base
    github: https://github.com/BurntSushi/ripgrep.git